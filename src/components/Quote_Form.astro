---
---
<section class="quote-form">
    <div class="container">
        <h2 class="quote-form__title">Get a Quote</h2>
        <p class="quote-form__subtitle">Fill out the form below and we'll get back to you with a personalized quote</p>
        
        <form class="quote-form__form" netlify name="quote-form">
            <!-- Personal Information -->
            <div class="quote-form__section">
                <h3 class="quote-form__section-title">
                    <span class="quote-form__section-icon">üë§</span>
                    Personal Information
                </h3>
                <div class="quote-form__row">
                    <div class="quote-form__form-group">
                        <label for="name">Full Name *</label>
                        <input 
                            type="text" 
                            id="name" 
                            name="name" 
                            required 
                            placeholder="Enter your full name"
                            autocomplete="name"
                        />
                        <span class="quote-form__error" id="name-error"></span>
                    </div>
                    <div class="quote-form__form-group">
                        <label for="phone">Phone Number *</label>
                        <input 
                            type="tel" 
                            id="phone" 
                            name="phone" 
                            required 
                            placeholder="(555) 123-4567"
                            autocomplete="tel"
                        />
                        <span class="quote-form__error" id="phone-error"></span>
                    </div>
                </div>
                <div class="quote-form__form-group">
                    <label for="email">Email Address *</label>
                    <input 
                        type="email" 
                        id="email" 
                        name="email" 
                        required 
                        placeholder="your.email@example.com"
                        autocomplete="email"
                    />
                    <span class="quote-form__error" id="email-error"></span>
                </div>
            </div>

            <!-- Service Information -->
            <div class="quote-form__section">
                <h3 class="quote-form__section-title">
                    <span class="quote-form__section-icon">üöó</span>
                    Service Details
                </h3>
                <div class="quote-form__form-group">
                    <label for="service_type">Service Type *</label>
                    <select id="service_type" name="service_type" required>
                        <option value="">Select a service</option>
                        <option value="exterior">Exterior Detailing</option>
                        <option value="interior">Interior Detailing</option>
                        <option value="full">Full Detail</option>
                        <option value="maintenance">Maintenance Wash</option>
                    </select>
                    <span class="quote-form__error" id="service-type-error"></span>
                </div>
                <div class="quote-form__form-group">
                    <label for="vehicle_info">Vehicle Information</label>
                    <input 
                        type="text" 
                        id="vehicle_info" 
                        name="vehicle_info" 
                        placeholder="Year, Make, Model (e.g., 2020 Honda Civic)"
                    />
                </div>
            </div>

            <!-- Address Information -->
            <div class="quote-form__section">
                <h3 class="quote-form__section-title">
                    <span class="quote-form__section-icon">üìç</span>
                    Service Address
                </h3>
                <div class="quote-form__form-group">
                    <label for="street">Street Address *</label>
                    <input 
                        type="text" 
                        id="street" 
                        name="street" 
                        required 
                        placeholder="123 Main Street"
                        autocomplete="street-address"
                    />
                    <span class="quote-form__error" id="street-error"></span>
                </div>
                <div class="quote-form__row">
                    <div class="quote-form__form-group">
                        <label for="city">City *</label>
                        <input 
                            type="text" 
                            id="city" 
                            name="city" 
                            required 
                            placeholder="City"
                            autocomplete="address-level2"
                        />
                        <span class="quote-form__error" id="city-error"></span>
                    </div>
                    <div class="quote-form__form-group">
                        <label for="state">State *</label>
                        <input 
                            type="text" 
                            id="state" 
                            name="state" 
                            required 
                            placeholder="State"
                            autocomplete="address-level1"
                        />
                        <span class="quote-form__error" id="state-error"></span>
                    </div>
                </div>
                <div class="quote-form__form-group">
                    <label for="zipcode">ZIP Code *</label>
                    <input 
                        type="text" 
                        id="zipcode" 
                        name="zipcode" 
                        required 
                        placeholder="12345"
                        autocomplete="postal-code"
                        pattern="[0-9]{5}"
                    />
                    <span class="quote-form__error" id="zipcode-error"></span>
                </div>
            </div>

            <!-- Additional Details -->
            <div class="quote-form__section">
                <h3 class="quote-form__section-title">
                    <span class="quote-form__section-icon">üìù</span>
                    Additional Details
                </h3>
                <div class="quote-form__form-group">
                    <label for="message">Special Requests or Additional Information</label>
                    <textarea 
                        id="message" 
                        name="message" 
                        rows="4" 
                        placeholder="Tell us about your vehicle, specific concerns, or any special requests..."
                    ></textarea>
                </div>
            </div>

            <div class="quote-form__submit-section">
                <button class="quote-form__button" type="submit">
                    <span class="quote-form__button-text">Get My Quote</span>
                    <span class="quote-form__button-icon">‚Üí</span>
                </button>
                <p class="quote-form__disclaimer">* Required fields</p>
            </div>
        </form>
    </div>
</section>

<style>
    .quote-form {
        /* margin-bottom: 128px; */
        padding: 64px 0;
        background: linear-gradient(135deg, #1a1a1a 0%, #0a0a0a 100%);
        /* border-radius: 16px; */
        position: relative;
        overflow: hidden;
    }

    .quote-form::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 20% 80%, rgba(255, 67, 67, 0.1) 0%, transparent 50%),
                    radial-gradient(circle at 80% 20%, rgba(255, 67, 67, 0.05) 0%, transparent 50%);
        pointer-events: none;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 24px;
        position: relative;
        z-index: 1;
    }

    .quote-form__title {
        font-size: 48px;
        font-weight: 700;
        margin: 0 0 16px 0;
        color: #ffffff;
        text-align: center;
        background: linear-gradient(135deg, #ffffff 0%, #ff4343 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .quote-form__subtitle {
        font-size: 18px;
        color: #cccccc;
        text-align: center;
        margin-bottom: 48px;
        line-height: 1.6;
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
    }

    .quote-form__form {
        display: flex;
        flex-direction: column;
        gap: 32px;
    }

    .quote-form__section {
        background: rgba(255, 255, 255, 0.03);
        border: 1px solid rgba(255, 255, 255, 0.08);
        border-radius: 16px;
        padding: 32px;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
    }

    .quote-form__section:hover {
        border-color: rgba(255, 67, 67, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .quote-form__section-title {
        font-size: 22px;
        font-weight: 600;
        color: #ffffff;
        margin: 0 0 24px 0;
        padding-bottom: 12px;
        border-bottom: 2px solid #ff4343;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .quote-form__section-icon {
        font-size: 20px;
        opacity: 0.8;
    }

    .quote-form__row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 24px;
    }

    .quote-form__form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 24px;
        position: relative;
    }

    .quote-form__form-group:last-child {
        margin-bottom: 0;
    }

    .quote-form__form-group label {
        font-size: 14px;
        font-weight: 600;
        color: #ffffff;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .quote-form__form-group label::after {
        content: '';
        width: 4px;
        height: 4px;
        background: #ff4343;
        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .quote-form__form-group label[for*="required"]::after,
    .quote-form__form-group label:has(+ input[required])::after,
    .quote-form__form-group label:has(+ select[required])::after {
        opacity: 1;
    }

    .quote-form__form-group input,
    .quote-form__form-group textarea,
    .quote-form__form-group select {
        background-color: rgba(17, 17, 17, 0.9);
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 16px 20px;
        color: #ffffff;
        font-size: 16px;
        transition: all 0.3s ease;
        font-family: inherit;
        backdrop-filter: blur(10px);
    }

    .quote-form__form-group input:hover,
    .quote-form__form-group textarea:hover,
    .quote-form__form-group select:hover {
        border-color: rgba(255, 255, 255, 0.2);
        background-color: rgba(17, 17, 17, 0.95);
    }

    .quote-form__form-group input:focus,
    .quote-form__form-group textarea:focus,
    .quote-form__form-group select:focus {
        outline: none;
        border-color: #ff4343;
        box-shadow: 0 0 0 4px rgba(255, 67, 67, 0.15);
        background-color: rgba(17, 17, 17, 1);
    }

    .quote-form__form-group input:invalid:not(:placeholder-shown),
    .quote-form__form-group textarea:invalid:not(:placeholder-shown),
    .quote-form__form-group select:invalid:not(:placeholder-shown) {
        border-color: #ff6b6b;
        box-shadow: 0 0 0 4px rgba(255, 107, 107, 0.15);
    }

    .quote-form__form-group input::placeholder,
    .quote-form__form-group textarea::placeholder {
        color: #888888;
        opacity: 0.7;
    }

    .quote-form__form-group select {
        cursor: pointer;
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12' fill='none'%3E%3Cpath d='M2 4L6 8L10 4' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 16px center;
        padding-right: 48px;
    }

    .quote-form__form-group select option {
        background-color: #111111;
        color: #ffffff;
        padding: 12px;
    }

    .quote-form__error {
        color: #ff6b6b;
        font-size: 12px;
        font-weight: 500;
        margin-top: 4px;
        opacity: 0;
        transform: translateY(-4px);
        transition: all 0.3s ease;
    }

    .quote-form__error:not(:empty) {
        opacity: 1;
        transform: translateY(0);
    }

    .quote-form__submit-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 16px;
        padding-top: 16px;
    }

    .quote-form__button {
        background: linear-gradient(135deg, #ff4343 0%, #e63939 100%);
        color: #ffffff;
        border: none;
        border-radius: 50px;
        padding: 20px 48px;
        font-size: 16px;
        font-weight: 700;
        line-height: 150%;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(255, 67, 67, 0.3);
        display: flex;
        align-items: center;
        gap: 12px;
        position: relative;
        overflow: hidden;
    }

    .quote-form__button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s ease;
    }

    .quote-form__button:hover::before {
        left: 100%;
    }

    .quote-form__button:hover {
        background: linear-gradient(135deg, #e63939 0%, #d63030 100%);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(255, 67, 67, 0.4);
    }

    .quote-form__button:active {
        transform: translateY(0);
    }

    .quote-form__button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .quote-form__button-text {
        position: relative;
        z-index: 1;
    }

    .quote-form__button-icon {
        font-size: 18px;
        position: relative;
        z-index: 1;
        transition: transform 0.3s ease;
    }

    .quote-form__button:hover .quote-form__button-icon {
        transform: translateX(4px);
    }

    .quote-form__disclaimer {
        color: #888888;
        font-size: 14px;
        text-align: center;
        margin: 0;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .quote-form {
            padding: 40px 0;
            margin-bottom: 80px;
        }

        .container {
            padding: 0 16px;
        }

        .quote-form__title {
            font-size: 36px;
        }

        .quote-form__subtitle {
            font-size: 16px;
            margin-bottom: 32px;
        }

        .quote-form__form {
            gap: 24px;
        }

        .quote-form__section {
            padding: 24px 20px;
        }

        .quote-form__section-title {
            font-size: 20px;
        }

        .quote-form__row {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .quote-form__form-group {
            margin-bottom: 20px;
        }

        .quote-form__form-group input,
        .quote-form__form-group textarea,
        .quote-form__form-group select {
            padding: 14px 16px;
            font-size: 16px; /* Prevents zoom on iOS */
        }

        .quote-form__button {
            padding: 18px 32px;
            font-size: 14px;
            width: 100%;
            justify-content: center;
        }
    }

    @media (max-width: 480px) {
        .quote-form__title {
            font-size: 28px;
        }

        .quote-form__section {
            padding: 20px 16px;
        }

        .quote-form__section-title {
            font-size: 18px;
        }
    }

    /* Focus visible for better accessibility */
    .quote-form__button:focus-visible {
        outline: 2px solid #ff4343;
        outline-offset: 2px;
    }

    /* Loading state */
    .quote-form__button.loading {
        pointer-events: none;
    }

    .quote-form__button.loading .quote-form__button-icon {
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
</style>

<script>
    // Form validation and enhancement
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.quote-form__form') as HTMLFormElement;
        const submitButton = document.querySelector('.quote-form__button') as HTMLButtonElement;
        
        if (!form || !submitButton) return;

        // Real-time validation
        const inputs = form.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.addEventListener('blur', validateField);
            input.addEventListener('input', clearError);
        });

        // Form submission
        form.addEventListener('submit', handleSubmit);

        function validateField(e: Event) {
            const field = e.target as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;
            const errorElement = document.getElementById(field.id + '-error');
            
            if (!errorElement) return true;

            let isValid = true;
            let errorMessage = '';

            // Required field validation
            if (field.hasAttribute('required') && !field.value.trim()) {
                isValid = false;
                errorMessage = 'This field is required';
            }

            // Email validation
            if (field.type === 'email' && field.value) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(field.value)) {
                    isValid = false;
                    errorMessage = 'Please enter a valid email address';
                }
            }

            // Phone validation
            if (field.type === 'tel' && field.value) {
                const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
                const cleanPhone = field.value.replace(/[\s\-\(\)]/g, '');
                if (!phoneRegex.test(cleanPhone)) {
                    isValid = false;
                    errorMessage = 'Please enter a valid phone number';
                }
            }

            // ZIP code validation
            if (field.id === 'zipcode' && field.value) {
                const zipRegex = /^\d{5}$/;
                if (!zipRegex.test(field.value)) {
                    isValid = false;
                    errorMessage = 'Please enter a valid 5-digit ZIP code';
                }
            }

            // Update error display
            if (!isValid) {
                errorElement.textContent = errorMessage;
                field.classList.add('error');
            } else {
                errorElement.textContent = '';
                field.classList.remove('error');
            }

            return isValid;
        }

        function clearError(e: Event) {
            const field = e.target as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;
            const errorElement = document.getElementById(field.id + '-error');
            if (errorElement) {
                errorElement.textContent = '';
                field.classList.remove('error');
            }
        }

        function handleSubmit(e: Event) {
            e.preventDefault();
            
            // Validate all fields
            let isValid = true;
            inputs.forEach(input => {
                const mockEvent = { target: input } as unknown as Event;
                if (!validateField(mockEvent)) {
                    isValid = false;
                }
            });

            if (!isValid) {
                // Focus on first error
                const firstError = form.querySelector('.error') as HTMLElement;
                if (firstError) {
                    firstError.focus();
                }
                return;
            }

            // Show loading state
            submitButton.classList.add('loading');
            submitButton.disabled = true;
            const buttonText = submitButton.querySelector('.quote-form__button-text') as HTMLElement;
            if (buttonText) {
                buttonText.textContent = 'Sending...';
            }

            // Simulate form submission (replace with actual submission logic)
            setTimeout(() => {
                alert('Thank you! Your quote request has been submitted. We\'ll get back to you soon.');
                form.reset();
                submitButton.classList.remove('loading');
                submitButton.disabled = false;
                if (buttonText) {
                    buttonText.textContent = 'Get My Quote';
                }
            }, 2000);
        }
    });
</script>